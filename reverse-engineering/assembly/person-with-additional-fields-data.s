	.section .data

	# Data shared with other files
	.globl people, number_of_people
	.globl NAME_PTR_OFFSET, WEIGTH_OFFSET, LAST_TWO_DIGITS_PHONE_NUMBER_OFFSET, SHOE_OFFSET
	.globl HAIR_OFFSET, FACEBOOK_FRIENDS_OFFSET, HEIGTH_OFFSET, AGE_OFFSET
	.globl PERSON_RECORD_SIZE
	
	# Define offset each field of people array
	.equ NAME_PTR_OFFSET, 0
	.equ WEIGTH_OFFSET, 8
	.equ LAST_TWO_DIGITS_PHONE_NUMBER_OFFSET, 16
	.equ SHOE_OFFSET, 24
	.equ HAIR_OFFSET, 32
	.equ FACEBOOK_FRIENDS_OFFSET, 40
	.equ HEIGTH_OFFSET, 48
	.equ AGE_OFFSET, 56

	# Size of struct
	.equ PERSON_RECORD_SIZE, 64
	
people:
	# Array of people
	# Name (pointer on name address), weigth, last two digit of phone number, shoe size, hair color (equivalence in number), number of facebook friends, height, age.
	# Those values corresponds to american weight, shoe size and heigth units.
	.quad gkc_name, 200, 96, 10, 2, 10, 74, 20
	.quad jb_name,  250, 43, 12, 2, 20, 72, 44
	.quad csl_name, 150, 12,  8, 1, 15, 68, 30
	.quad ta_name,  250, 67, 10, 4, 12, 70, 11
	.quad in_name,  250, 24, 10, 4, 13, 70, 11
	.quad gm_name,  180, 33, 11, 5, 56, 69, 65
	
end_people:	

# Pointers on the strings representing the names.
gkc_name:
	.ascii "Gilbert Keith Chester\0"
jb_name:	
	.ascii "Jonathan Bartlett\0"
csl_name:	
	.ascii "Clive Silver Lewis\0"
ta_name:	
	.ascii "Tommy Aquinas\0"
in_name:	
	.ascii "Isaac Newton\0"
gm_name:	
	.ascii "Gregory Mend\0"
	
number_of_people:
	# Compute the number of people from the size of a struct representing one person.
	.quad (end_people - people) / PERSON_RECORD_SIZE

