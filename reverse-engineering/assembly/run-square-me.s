	# This simple program will be build against a basic 'shared library' obtained from the file 'square-me.s' that contains the 'square-me' function.
	# It squares a number and print a result message.
	.globl main

	.section .rodata

number_to_square:
	.quad -60
	
message_result_of_square_operation:
	.ascii "\nThe square of %d is %d.\n\0"
	
	.section .text
	
main:	
	enter $0, $0

	movq number_to_square, %rdi
	call square_me

	movq stdout, %rdi
	leaq message_result_of_square_operation, %rsi
	movq number_to_square, %rdx
	movq %rax, %rcx # The result of 'square_me' function.
	# No floating-point argument for variadic function.
	movq $0, %rax
	call fprintf

	# Set 'main' return code to '0'.
	xor %rax, %rax
	
	leave
	ret
	
	.section .note.GNU-stack, "", @progbits
