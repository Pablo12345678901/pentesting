# REMINDER : Reboot has to be runned with sudo :
#
# PROGRAM=NAME-OF-THIS-PROGRAM; as "$PROGRAM".s -o "$PROGRAM".o && ld "$PROGRAM".o -o "$PROGRAM" && rm -rf "$PROGRAM".o && sudo ./"$PROGRAM"
	
	
.section .data
    msg: .ascii "\nWARNING : \nThis will reboot your computer. \n\nValidate by typing any input followed by enter or exit with C-c. \n-> "
    msg_len = . - msg
.section .bss
    .lcomm buffer, 64

.section .text
.global _start

_start:
    # Announcing user that important action will occur.
    movq $1, %rax                        # %rax = 1 = sys_write
    movq $1, %rdi                        # %rdi = file descriptor (1=stdout) (first argument of sys_write)
    movq $msg, %rsi                      # %rsi = message to write (second argument of sys_write) - see above
    movq $msg_len, %rdx                  # %rdx message length (third argument of sys_write) - see above
    syscall

    # Reading user input
    movq $0, %rax                        # sys_read system call
    movq $0, %rdi                        # file descriptor (stdin)
    leaq buffer(%rip), %rsi              # buffer to store input
    movq $64, %rdx                       # number of bytes to read
    syscall

    # Reboot
    movq $169, %rax          # syscall number for reboot
    movq $0xfee1dead, %rdi   # magic1
    movq $672274793, %rsi    # magic2 (LINUX_REBOOT_MAGIC2)
    movq $0x1234567, %rdx    # cmd (e.g., LINUX_REBOOT_CMD_RESTART)
    xorq %r10, %r10          # arg (NULL)
    syscall                  # invoke syscall

    # Exit syscall in case reboot fails
    movq $60, %rax           # syscall number for exit
    xorq %rdi, %rdi          # exit status 0
    syscall
