	
	.globl _start
	.section .text
_start:
	# Set all registers to '0'.
	movq $0, %rax
	movq $0, %rbx
	movq $0, %rdi

	# Set least significant byte of both registers '%rax' and '%rbx'
	movb $0b01100010, %al # %rax
	#             2
	#        32
	# +     64
	#_______________
	#            98
	movb $0b11110100, %bl # %rbx
	#            4
	#         16
	#        32
	#       64
	#     128
	#______________
	#          244

	# 'xor' simple instruction
	xorb %al, %bl
	#       0 1 1 0 0 0 1 0
	# XOR   1 1 1 1 0 1 0 0
	#______________________
	#       1 0 0 1 0 1 1 0
	#                   2
	#                 4
	#            16
	# +   128
	#______________________
	#                   150

	# Uncomment below lines in order to check the initial value of %rax and %rbx
	#movb $0b01100010, %bl # Initial value of %rax
	#movb $0b11110100, %bl # Initial value of %rbx
	
end_of_program:
	# Set exit code value
	movq %rbx, %rdi
	# Exit syscall
	movq $60, %rax
	syscall
