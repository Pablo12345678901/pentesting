	# This program aims to be used as a shared library to be built against in order to override the 'fprintf' function from the standard C library.
	# To do so, the 'LD_PRELOAD' environment variable has to be set to such shared library with the command 'export LD_PRELOAD=PATH/SHARED-LIB.so' and the program built from the file 'fprintf-override-program.s' has to be run ONLY AFTER setting such environment variable.
	.globl fprintf

#------------------------------------------------------------------------------
	
	.section .data
	
message_intercepted:
	.ascii "\nWARNING : you message was intercepted by the overridden version of 'fprintf' !\n\0"
message_intercepted_end:	

#------------------------------------------------------------------------------
	
	.section .text

fprintf:
	# Set 'write' system call
	movq $1, %rax
	
	# Set file descriptor to 'stdout'
	#movq stdout@GOTPCREL(%rip), %rdi # This does not work with 'write' syscall.
	#movq (%rdi), %rdi # This does not work with 'write' syscall.
	movq $1, %rdi

	leaq message_intercepted(%rip), %rsi

	# Load addresses of message start and end
	leaq message_intercepted_end(%rip), %rdx
	leaq message_intercepted(%rip), %rcx
	# Compute the difference between both
	subq %rcx, %rdx
	# Decrement not to include the final null char
	decq %rdx

	syscall

	# Set return code of function to '0'.
	xor %rax, %rax
	
	ret

#------------------------------------------------------------------------------
	
	# Set non-executable stack ("") that contains program data "@progbits"
	.section .note.GNU-stack, "", @progbits

	
