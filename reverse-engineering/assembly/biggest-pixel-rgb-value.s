	# This file has to be assembled first, and then, the object produced has to be linked with 'person-data.o'.
	
	.globl _start
	.section .text
_start:
	# Load address of first record
	leaq pixels, %rbx

	# Get record count to loop on it.
	movq number_of_pixels, %rcx

	# Set default biggest value found to the minimum existing in the range 0-255.
	movq $0, %rdx

	# Exit if there is no record
	cmpq $0, %rcx
	je end_of_program

main_loop:
	# Reminder : %rbx is the pointer to the struct.
	# Depending on the (un)commented line(s), the maximum of R, G or B will be returned.
	#movb RED_OFFSET(%rbx), %al
	#movb GREEN_OFFSET(%rbx), %al
	movb BLUE_OFFSET(%rbx), %al
	
	# If it is less or equal than current maximum, get to next value - if any.
	cmpb %dl, %al
	jbe end_loop
	
	# Else adapt the current maximum.
	movb %al, %dl

end_loop:
	# Get the address of next person by adding the size of one person to the address of the struct.
	addq $PIXEL_RECORD_SIZE, %rbx
	loopq main_loop
	
end_of_program:
	# Set the exit return value
	movq %rdx, %rdi
	# Exit syscall
	movq $60, %rax
	syscall
