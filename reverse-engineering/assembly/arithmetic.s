.globl _start  
.section .text

_start: 
	# Store '3' into '%rdi' register
	movq $3, %rdi

	# Move the '%rdi' register (with value '3') to the '%rax' register
	movq %rdi, %rax

	# Increase %rax by %rdi so increase 3 by 3 = 6.
	addq %rdi, %rax
	
	# Multiply %rax by 3 so 6*3 = 18
	mulq %rdi
	
	# Store '2' into '%rdi' register
	movq $2, %rdi

	# Icrease '%rax' by '%rdi' so 18 + 2 = 20
	addq %rdi, %rax

	# Store '4' into '%rdi' register
	movq $4, %rdi

	# Multiply %rax by 4 so 20*4 = 80
	mulq %rdi
	
	# Set the return value (%rdi) of next call to the '%rax' value (=80).
	movq %rax, %rdi 
	
	# Set the exit (=60) system call number (=%rax)
	movq $60, %rax

	# Call 'exit' with return value of '%rdi'
	syscall

