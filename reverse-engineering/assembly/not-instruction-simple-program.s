	# The program will flip all bits with the 'not' instruction :
	#	0 -> 1
	#	1 -> 0

	.globl _start
	.section .text
_start:
	# Set register to '0'
	movq $0, %rax
	
	# Set least significant byte of '%rax' register to a value.
	movb $0b01001010, %al
	#             2
	#           8
	#       64
	#______________
	#            74

	# Reverting all bits with 'not' instruction.
	notb %al
	# NOT   0 1 0 0 1 0 1 0
	#______________________
	#       1 0 1 1 0 1 0 1
	#                     1
	#                 4
	#            16
	#          32
	#     128     
	#______________________
	#                   181
	
end_of_program:
	# Set the exit code
	movq %rax, %rdi
	
	# Exit syscall
	movq $60, %rax
	syscall
