# This script count the number of lowercase letter in a string of characters.
# Reminder : lowercase have value between 97 and 122 inclusive x2.
	
	.globl _start

	.section .data

my_string:
	.ascii "This is a string of characters.\0" # 1 uppercase letter, 24 lowercase letter, 5 spaces and 1 other char (dot = '.') (not counting the null char '\0'). 
	
	.section .text
_start:
	# Get address of first character.
	leaq my_string, %rbx

	# Set counter of lowercase letter.
	movq $0, %rdi
	
main_loop:
	# Load the char value into another register to check its value when debugging.
	movb (%rbx), %cl
	
	# Check if current char is the null char '\0' and exit program if so.
	cmpb $0, (%rbx)
	# Or :
	#cmpb $0, %cl # If using the register with the value of current address already loaded.
	je end_of_program
	
	# Check if current char is below 97 and if so get the next one.
	#cmpb $97, (%rbx)
	# Or :
	cmpb $'a', (%rbx)
	jb get_next_char_address
	
	# Check if current char is above 122 and if so get the next one.
	#cmpb $122, (%rbx)
	# Or :
	cmpb $'z', (%rbx)
	ja get_next_char_address
	
	# Else increase counter of lowercase letter.
	incq %rdi

get_next_char_address:
	# Increase = + 1 = get next byte address.
	incq %rbx
	jmp main_loop

end_of_program:
	# Exit syscall
	movq $60, %rax
	syscall
